name: Daily

# Build, run tests and push to docker hub (if upstream changed in the last day)
on:
  # run daily
  schedule:
    - cron:  '14 14 * * *'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check Upstream
        id: check-upstream
        env:
          UPSTREAM_VERSIONS_URL: "https://api.github.com/orgs/linuxserver/packages/container/smokeping/versions"
          CURRENT_VERIONS_URL: "https://api.github.com/users/${{ github.repository_owner }}/packages/container/smokeping-speedtest/versions"
        run: |
          get_latest_ls_version() {
            jq -r '.[] | select(.metadata.container.tags | any(. == "latest")) | .metadata.container.tags[]' | \
            grep -oP 'ls\K[0-9]+$' | sort -nr | head -n1
          }

          UPSTREAM_VERSION=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "${UPSTREAM_VERSIONS_URL}" | get_latest_ls_version)

          CURRENT_VERSION=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "${CURRENT_VERIONS_URL}" | get_latest_ls_version)

          if (( ${UPSTREAM_VERSION} > ${CURRENT_VERSION} )); then
            echo "Upstream changed, building image"
            echo "upstream=changed" >> "${GITHUB_OUTPUT}"
          else
            echo "No upstream change, skipping"
          fi

      - name: Checkout
        uses: actions/checkout@v4
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Build Test
        id: docker_test
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          target: test
          tags: smokeping-speedtest:test
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Run Test
        run: docker run --rm smokeping-speedtest:test
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Create Tags
        id: create-tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_TAG_GH: "ghcr.io/${{ github.repository_owner }}/smokeping-speedtest:"
          BASE_TAG_DOCKER: "${{ secrets.DOCKERHUB_USERNAME }}/smokeping-speedtest:"
        run: |
          UPSTREAM_TAGS=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
           /orgs/linuxserver/packages/container/smokeping/versions | jq -r '.[] | select( .metadata.container.tags | any(. == "latest") ) .metadata.container.tags | join(",")')
          if [[ -z "${UPSTREAM_TAGS}" ]]; then
            echo "Failed to find upstream latest tags"
            exit 1
          fi
          echo "Upstream tags: ${UPSTREAM_TAGS}"
          TAGS_GH=$(echo ${UPSTREAM_TAGS} | sed "s|[^,]*|${BASE_TAG_GH}&|g")
          TAGS_DOCKER=$(echo ${UPSTREAM_TAGS} | sed "s|[^,]*|${BASE_TAG_DOCKER}&|g")
          echo "tags=${TAGS_GH},${TAGS_DOCKER}" >> ${GITHUB_OUTPUT}
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check-upstream.outputs.upstream == 'changed'

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.create-tags.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
        if: steps.check-upstream.outputs.upstream == 'changed'
